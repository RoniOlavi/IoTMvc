@model IoTAsema.Models.measurements

@{
    ViewBag.Title = "Edit";
}

<h2>Muokkaa</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Mittaus</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.MeasurementID)

    <div class="form-group">
        <div class="col-md-10">
            <a>Laite</a>
            @Html.DropDownList("DeviceID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DeviceID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            <a>Aika</a>
            @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            <a>Tyyppi</a>
            @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            <a>Lämpötila C</a>
            @Html.EditorFor(model => model.Celsius, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Celsius, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            <a>Lämpötila F</a>
            @Html.EditorFor(model => model.Fahrenheit, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Fahrenheit, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            <a>Kosteus%</a>
            @Html.EditorFor(model => model.Humidity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Humidity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Tallenna" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Takaisin", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
